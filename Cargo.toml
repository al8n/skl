[package]
name = "skl"
version = "0.12.0"
edition = "2021"
rust-version = "1.56.0"
repository = "https://github.com/al8n/skl"
description = "A lock-free thread-safe concurrent ARENA based (heap backend or memory map backend) skiplist implementation which helps develop MVCC memtable for LSM-Tree."
documentation = "https://docs.rs/skl"
homepage = "https://github.com/al8n/skl"
keywords = ["skiplist", "lock-free", "memtable", "concurrency", "arena"]
categories = ["database", "data-structures", "concurrency", "no-std"]
license = "MIT/Apache-2.0"

[[bench]]
path = "benches/bench.rs"
name = "bench"
harness = false

[[example]]
name = "heap"
path = "examples/heap.rs"

[[example]]
name = "mmap"
path = "examples/mmap.rs"
required-features = ["memmap"]

[[example]]
name = "mmap-anon"
path = "examples/mmap_anon.rs"
required-features = ["memmap"]

[features]
default = ["std"]
alloc = ["rarena-allocator/alloc"]
memmap = ["rarena-allocator/memmap", "std"]
std = ["rand/default", "either/default", "rarena-allocator/std"]
tracing = ["dep:tracing", "rarena-allocator/tracing"]

# loom = ["dep:loom", "rarena-allocator/loom"]

[target.'cfg(target_family = "wasm")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }

[dependencies]
either = { version = "1", default-features = false }
rand = { version = "0.8", default-features = false, features = ["getrandom"] }
rarena-allocator = { version = "0.1", default-features = false }
ux2 = { version = "0.8", default-features = false, features = ["32"] }

tracing = { version = "0.1", optional = true }

[dev-dependencies]
criterion = "0.5"
tempfile = "3"
parking_lot = "0.12"
paste = "1"
wg = { version = "0.9", default-features = false, features = ["std"] }


[profile.bench]
opt-level = 3
debug = false
codegen-units = 1
lto = 'thin'
incremental = false
debug-assertions = false
overflow-checks = false
rpath = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace]
members = ["integration"]
